[{"authors":["jjbeto"],"categories":null,"content":"Meu nome √© Jos√© Jouberto Fonseca Lopes, sou brasileiro \u0026#x1f1e7;\u0026#x1f1f7;, amo comida japonesa e cerveja Alem√£/Belga üç∫!\nAtualmente trabalho como Desenvolvedor Java S√™nior na OpenValue. Meus interesses incluem Solu√ß√£o \u0026amp; Arquitetura de Sistemas, Automa√ß√£o \u0026amp; DevOps e Cryptomoedas \u0026amp; An√°lise T√©cnica.\nTrabalhando com Java desde a Universidade, tamb√©m tenho experiencia com diferentes bancos de dados, processo de automa√ß√£o e mais recentemente com Infraestrutura como C√≥digo. Meu foco √© inova√ß√£o e refatora√ß√£o de projetos, trabalhando com melhores pr√°ticas e manutendo uma boa itera√ß√£o com membros do time.\nCom mais de 12 anos de experi√™ncia com Java e trabalhando com diversos tipos de projetos, tive a oportunidade de desenvolver aplica√ß≈çes de varios tipos e tamanhos: de projetos cr√≠ticos e alta performance √† projetos do Governo do Estado (Brasil), de com√©rcio eletr√¥nico a sistemas banc√°rios, at√© a migra√ß√£o de backend pra caixas eletr√¥nicos!\nPor conta disso acredito que posso desenvolver solu√ß≈çes pensando \u0026ldquo;fora da caixa\u0026rdquo;, sempre revendo problemas dos quais j√° tive experi√™ncias passadas mas tamb√©m sendo cr√≠tico e ponderado com novos problemas que surgem.\n","date":1575727200,"expirydate":-62135596800,"kind":"taxonomy","lang":"pt","lastmod":1575727200,"objectID":"f0c69d14fa4d19488a471be6687d742f","permalink":"https://jjbeto.com/pt/authors/jjbeto/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pt/authors/jjbeto/","section":"authors","summary":"Meu nome √© Jos√© Jouberto Fonseca Lopes, sou brasileiro \u0026#x1f1e7;\u0026#x1f1f7;, amo comida japonesa e cerveja Alem√£/Belga üç∫!\nAtualmente trabalho como Desenvolvedor Java S√™nior na OpenValue. Meus interesses incluem Solu√ß√£o \u0026amp; Arquitetura de Sistemas, Automa√ß√£o \u0026amp; DevOps e Cryptomoedas \u0026amp; An√°lise T√©cnica.\nTrabalhando com Java desde a Universidade, tamb√©m tenho experiencia com diferentes bancos de dados, processo de automa√ß√£o e mais recentemente com Infraestrutura como C√≥digo. Meu foco √© inova√ß√£o e refatora√ß√£o de projetos, trabalhando com melhores pr√°ticas e manutendo uma boa itera√ß√£o com membros do time.","tags":null,"title":"Beto Fonseca","type":"authors"},{"authors":["Beto Fonseca"],"categories":null,"content":"   √çndice  - 1. Vis√£o Geral - 2. Aplicativo Echo - 3. Gera√ß√£o do Projeto - 4. Swagger - 5. DockerHub - 6. Conclus√£o   \n1. Overview Eu quero falar de 88Microservi√ßos**, mas ent√£o eu percebi que na verdade eu n√£o muito material publicado que eu possa usar pra isso, como um microservi√ßo.\nPor conta disso eu decidi criar um pequeno microservi√ßo do zero, o qual eu possa reusar em futuros artigos pra fazer mais coisas legais üòù\nPra isso eu escolhi um framework muito falado hoje em dia, que √© bem interessante: Quarkus.\nA id√©ia √© criar um servi√ßo simples de echo: eu mando um texto e a API responde o mesmo texto em PLAINTEXT. Al√©m disso eu adicionarei um parametro de time pra decidir em quanto tempo eu quero que essa resposta seja retornada.\n2. Aplicativo Echo Um endpoint REST simples que retorna o mesmo texto que eu enviar como parametro. Tamb√©m deve ser poss√≠vel pedir um tempo de espera em milisegundos pra API responder.\nVoc√™ pode encontrar o c√≥digo fonte completo deste exemplo no meu GitHub, ou voc√™ tamb√©m pode:\n Baixar a imagem diretamente do DockerHub  3. Gera√ß√£o do Projeto Eu segui as etapas descritas na documenta√ß√£o do Quarkus:\n Criar o projeto base:\nmvn io.quarkus:quarkus-maven-plugin:1.0.1.Final:create \\ -DprojectGroupId=com.jjbeto \\ -DprojectArtifactId=echo \\ -DclassName=com.jjbeto.echo.EchoResource \\ -Dpath=/echo \\ -Dextensions=resteasy-jsonb  Removi .mvn do git: adicionei .mvn no .gitignore\n Criar a l√≥gica da aplica√ß√£o: retornar o texto parametrizado como PLAINTEXT e aceitar um query parameter como tempo de espera antes da API retornar a resposta.\n Mudar o path root pra ser da pr√≥pria aplica√ß√£o; Retornar a mensagem no path parameter de volta para o cliente; Adicionar um tempo de espera de acordo com o query parameter;   4. Swagger Vamos tornar essa API mais amig√°vel pra ser consumida por outras aplica√ß≈çes, adicionando Swagger e colocando algumas descri√ß≈çes, explicando pra que serve cada par√¢metro. Com Quarkus isso √© bem facil e pode ser encontrado como fazer diretamente na documenta√ß√£o.\nPrimeiramente precisamos adicionar o Swagger ao projeto, executando o comando a seguir diretamente na raiz do projeto:\n./mvnw quarkus:add-extension -Dextensions=\u0026quot;openapi\u0026quot;  Mas eu n√£o gosto do endpoint gerado automaticamente /openapi üòí, ent√£o eu vou mudar para /swagger. Pra isso basta mudar uma propriedade em application.properties:\nquarkus.smallrye-openapi.path=/swagger  O endpoint /swagger vai fornecer um arquivo Yaml descrevendo a API.\nEu tamb√©m quero ativar o SwaggerUI:\nquarkus.swagger-ui.always-include=true  O endpoint padr√£o para o SwaggerUI √© http://localhost:8080/swagger-ui.\nMuito bom! Agora vamos seguir em frente e adicionar algumas descri√ß≈çes para que usu√°rios da API saibam como utiliza-la. De acordo com a especifica√ß√£o n√≥s precisamos usar um arquivo openapi.yml para adicionar dados customizados:\n Acesse http://localhost:8080/swagger para baixar o arquivo openapi.yml atualizado Salve openapi.yml no diret√≥rio ./src/main/resources/META-INF Adicione algumas descri√ß≈çes e informa√ß≈çes sobre a API  Agora voc√™ pode verificar novamente o endere√ßo local http://localhost:8080/swagger-ui e verifique o resultado üòÉ\n5. DockerHub Eu quero que seja poss√≠vel que qualquer um possa baixar a imagem diretamente do DockerHub.\nConstruindo uma Imagem Nativa Quarkus permite a cria√ß√£o de um app completamente nativo, onde uma JVM n√£o √© necess√°ria. Isso √© incrivel principalmente quando se trata de aplica√ß≈çes simples como o Echo, por que a aplica√ß√£o fica muito r√°pida e a imagem para execu√ß√£o muito pequena!\nPara construir a imagem nativa n√≥s precisamos de alguns pre-requisitos conforme mencionado na documenta√ß√£o do Quarkus, por favor siga estes passos antes de continuar.\nNotas: fique atento da vers√£o do GraalVM, se a que voc√™ esta instalando √© compat√≠vel com a vers√£o atual do Quarkus. O Quarkus est√° sempre em evolu√ß√£o e fica o mais pr√≥ximo poss√≠vel das √∫ltimas atualiza√ß≈çes do GraalVM, mas √© preciso verificar se a vers√£o atual √© compat√≠vel: no momento que estou escrevendo este artigo o GraalVM est√° na vers√£o 19.3.0.r11 enquanto o Quarkus √© compat√≠vel apenas com GraalVM 19.2.1.\nDepois de instalar o GraalVM (eu usei sdkman), Docker (ou podman) e as suas dependencias, voc√™ pode construir uma imagem nativa com o comando:\n./mvnw package -Pnative -Dquarkus.native.container-build=true  De acordo com o Quarkus a constru√ß√£o de uma imagem √© muito simples:\nTL;TR √© exatamente como construir um execut√°vel Jar com todas as suas dependencias (fat jar), mas a execu√ß√£o para construir uma imagem nativa demora mais tempo pra executar e custa mais recursos da m√°quina.\nNotas importantes sobre o processo de constru√ß√£o Ao construir a imagem usando Docker no meu Mac, eu recebi este erro:\ndocker run -v /Users/beto/IdeaProjects/opensource/echo/target/echo-1.0-SNAPSHOT-native-image-source-jar:/project:z --rm quay.io/quarkus/ubi-quarkus-native-image:19.2.1 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar echo-1.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http -H:-JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace echo-1.0-SNAPSHOT-runner [echo-1.0-SNAPSHOT-runner:25] classlist: 12,165.10 ms [echo-1.0-SNAPSHOT-runner:25] (cap): 1,720.23 ms [echo-1.0-SNAPSHOT-runner:25] setup: 3,699.11 ms 14:23:23,903 INFO [org.jbo.threads] JBoss Threads version 3.0.0.Final [echo-1.0-SNAPSHOT-runner:25] (typeflow): 17,087.39 ms [echo-1.0-SNAPSHOT-runner:25] (objects): 12,944.17 ms [echo-1.0-SNAPSHOT-runner:25] (features): 489.73 ms [echo-1.0-SNAPSHOT-runner:25] analysis: 31,843.79 ms [echo-1.0-SNAPSHOT-runner:25] (clinit): 622.07 ms [echo-1.0-SNAPSHOT-runner:25] universe: 1,768.77 ms [echo-1.0-SNAPSHOT-runner:25] (parse): 42,885.71 ms [echo-1.0-SNAPSHOT-runner:25] (inline): 49,278.76 ms [echo-1.0-SNAPSHOT-runner:25] (compile): 53,007.49 ms [echo-1.0-SNAPSHOT-runner:25] compile: 158,081.96 ms Error: Image build request failed with exit status 137 [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 03:55 min [INFO] Finished at: 2019-12-07T15:26:48+01:00 [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal io.quarkus:quarkus-maven-plugin:1.0.1.Final:build (default) on project echo: Failed to build a runnable JAR: Failed to augment application classes: Build failure: Build failed due to errors [ERROR] [error]: Build step io.quarkus.deployment.pkg.steps.NativeImageBuildStep#build threw an exception: java.lang.RuntimeException: Failed to build native image [ERROR] at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.build(NativeImageBuildStep.java:289) [ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) [ERROR] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [ERROR] at java.lang.reflect.Method.invoke(Method.java:498) [ERROR] at io.quarkus.deployment.ExtensionLoader$1.execute(ExtensionLoader.java:941) [ERROR] at io.quarkus.builder.BuildContext.run(BuildContext.java:415) [ERROR] at io.quarkus.builder.BuildContext$$Lambda$109.0000000055C01130.run(Unknown Source) [ERROR] at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35) [ERROR] at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2011) [ERROR] at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1535) [ERROR] at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1426) [ERROR] at java.lang.Thread.run(Thread.java:819) [ERROR] at org.jboss.threads.JBossThread.run(JBossThread.java:479) [ERROR] Caused by: java.lang.RuntimeException: Image generation failed [ERROR] at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.build(NativeImageBuildStep.java:278) [ERROR] ... 13 more [ERROR] -\u0026gt; [Help 1] [ERROR] [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException  Eu encontrei uma issue no GitHub do Quarkus relativo a esse erro e, quando mudei a mem√≥ria do meu Docker para 3GB (ao inv√©s dos 2GB padr√£o), o build funcionou:\ndocker run -v /Users/beto/IdeaProjects/opensource/echo/target/echo-1.0-SNAPSHOT-native-image-source-jar:/project:z --rm quay.io/quarkus/ubi-quarkus-native-image:19.2.1 -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar echo-1.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http -H:-JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace echo-1.0-SNAPSHOT-runner [echo-1.0-SNAPSHOT-runner:24] classlist: 8,587.26 ms [echo-1.0-SNAPSHOT-runner:24] (cap): 1,512.26 ms [echo-1.0-SNAPSHOT-runner:24] setup: 3,112.68 ms 14:29:25,687 INFO [org.jbo.threads] JBoss Threads version 3.0.0.Final [echo-1.0-SNAPSHOT-runner:24] (typeflow): 19,795.33 ms [echo-1.0-SNAPSHOT-runner:24] (objects): 17,973.88 ms [echo-1.0-SNAPSHOT-runner:24] (features): 486.83 ms [echo-1.0-SNAPSHOT-runner:24] analysis: 39,734.95 ms [echo-1.0-SNAPSHOT-runner:24] (clinit): 582.32 ms [echo-1.0-SNAPSHOT-runner:24] universe: 2,178.24 ms [echo-1.0-SNAPSHOT-runner:24] (parse): 5,333.97 ms [echo-1.0-SNAPSHOT-runner:24] (inline): 9,494.69 ms [echo-1.0-SNAPSHOT-runner:24] (compile): 29,119.41 ms [echo-1.0-SNAPSHOT-runner:24] compile: 46,351.15 ms [echo-1.0-SNAPSHOT-runner:24] image: 3,879.22 ms [echo-1.0-SNAPSHOT-runner:24] write: 2,057.79 ms [echo-1.0-SNAPSHOT-runner:24] [total]: 106,328.41 ms [INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 111589ms [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 02:00 min [INFO] Finished at: 2019-12-07T15:30:59+01:00 [INFO] ------------------------------------------------------------------------  Preparar a Imagem Para criar a imagem localmente podemos executar o seguinte comando:\ndocker build -f src/main/docker/Dockerfile.native -t jjbeto/echo .  O resultado:\nSending build context to Docker daemon 36.77MB Step 1/6 : FROM registry.access.redhat.com/ubi8/ubi-minimal latest: Pulling from ubi8/ubi-minimal 645c2831c08a: Pull complete 5e98065763a5: Pull complete Digest: sha256:32fb8bae553bfba2891f535fa9238f79aafefb7eff603789ba8920f505654607 Status: Downloaded newer image for registry.access.redhat.com/ubi8/ubi-minimal:latest ---\u0026gt; 469119976c56 Step 2/6 : WORKDIR /work/ ---\u0026gt; Running in 4f74acf2fa46 Removing intermediate container 4f74acf2fa46 ---\u0026gt; fc9bee94a0d0 Step 3/6 : COPY target/*-runner /work/application ---\u0026gt; b9a029618b01 Step 4/6 : RUN chmod 775 /work ---\u0026gt; Running in a37dd1eda18d Removing intermediate container a37dd1eda18d ---\u0026gt; a686c7dba3ed Step 5/6 : EXPOSE 8080 ---\u0026gt; Running in 21f6e36ba8cb Removing intermediate container 21f6e36ba8cb ---\u0026gt; 5d0d75543315 Step 6/6 : CMD [\u0026quot;./application\u0026quot;, \u0026quot;-Dquarkus.http.host=0.0.0.0\u0026quot;] ---\u0026gt; Running in 8a2dd88f45b2 Removing intermediate container 8a2dd88f45b2 ---\u0026gt; 33592d7cd99d Successfully built 33592d7cd99d Successfully tagged jjbeto/echo:latest  Se voc√™ listar as imagens locais:\ndocker images REPOSITORY TAG IMAGE ID CREATED SIZE jjbeto/echo latest 33592d7cd99d 12 seconds ago 142MB  Agora podemos finalmente executar nossa imagem:\ndocker run -i --rm -p 8080:8080 jjbeto/echo  E o resultado:\n2019-12-07 14:48:13,719 INFO [io.quarkus] (main) echo 1.0-SNAPSHOT (running on Quarkus 1.0.1.Final) started in 0.012s. Listening on: http://0.0.0.0:8080 2019-12-07 14:48:13,719 INFO [io.quarkus] (main) Profile prod activated. 2019-12-07 14:48:13,719 INFO [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb, smallrye-openapi, swagger-ui]  Sensacional! E se acessarmos o localhost:\n   Localhost executando na porta 8080   Mas\u0026hellip; A imagem ainda √© muito grande! 142MB n√£o √© um bom tamanho legal pra um servi√ßo t√£o pequeno, certo?\nEu mudei o arquivo .src/main/docker/Dockerfile.native para usar o m√≠nimo necess√°rio de arquivos da imagem debian:10-slim, seguindo esse conselho:\n## Stage 1 : intermediate container to copy the needed dynamic libraries FROM debian:10-slim AS debian ## Stage 2 : create the final docker image FROM scratch COPY target/*-runner /bin/app COPY --from=debian /lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2 COPY --from=debian /lib/x86_64-linux-gnu/ld-2.28.so \\ /lib/x86_64-linux-gnu/libm.so.6 /lib/x86_64-linux-gnu/libm-2.28.so \\ /lib/x86_64-linux-gnu/libpthread.so.0 /lib/x86_64-linux-gnu/libpthread-2.28.so \\ /lib/x86_64-linux-gnu/libdl.so.2 /lib/x86_64-linux-gnu/libdl-2.28.so \\ /lib/x86_64-linux-gnu/libz.so.1 /lib/x86_64-linux-gnu/libz.so.1.2.11 \\ /lib/x86_64-linux-gnu/librt.so.1 /lib/x86_64-linux-gnu/librt-2.28.so \\ /lib/x86_64-linux-gnu/libc.so.6 /lib/x86_64-linux-gnu/libc-2.28.so \\ /lib/x86_64-linux-gnu/ EXPOSE 8080 CMD [\u0026quot;/bin/app\u0026quot;, \u0026quot;-Dquarkus.http.host=0.0.0.0\u0026quot;]  E agora a minha imagem tem um tamanho mais interessante: 44.5MB\ndocker images REPOSITORY TAG IMAGE ID CREATED SIZE jjbeto/echo latest 3d7de934bcd4 29 seconds ago 44.5MB  Mas o resultado final no DockerHub √© diferente:\n   Imagem no DockerHub   15MB?? Agora sim!! üòé\nVoc√™ sabe como torn√°-la ainda menor? Por favor me manda uma mensagem! üì´\nComo Publicar no DockerHub? Para publicar a imagem no DockerHub √© muito simples:\n Login com o comando docker login e usar seu usu√°rio/senha Enviar sua imagem local para o reposit√≥rio remoto com o comando docker push \u0026lt;image_name\u0026gt;, no meu caso docker push jjbeto/echo V√° at√© o DockerHub e verifique o resultado üéâ  6. Conclus√£o Quarkus √© uma ferramenta incr√≠vel e renova mais uma vez o poder do Java no mundo atual, na minha opini√£o. √â f√°cio de usar, j√° possui uma grande lista de ferramentas que podem ser usadas em conjunto, como Hibernate, Vert.x e MicroProfile.\nMas por favor n√£o se engane, Quarkus n√£o √© pra todo mundo e nem pra todo projeto! Como √© construido usando GraalVM, n√£o √© poss√≠vel usar qualquer lib que voc√™ encontrar, ou voc√™ pode encontrar problemas como reflections por exemplo.\nSe voc√™ puder usar as libs padr√µes do Quarkus, com certeza ele √© um framework pra se levar em considera√ß√£o no seu projeto.\nSobre o Echo App, Quarkus foi uma boa escolha! O app foi gerado j√° pensando um pouco mais na frente, quando eu for fazer alguns testes com ambientes de microservi√ßos, fiquem ligados! üòé\n","date":1575727200,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1575727200,"objectID":"5f7d562a64bf47c3c168c8948c5fb67a","permalink":"https://jjbeto.com/pt/blog/2019/12/07/build-native-app-with-quarkus/","publishdate":"2019-12-07T14:00:00Z","relpermalink":"/pt/blog/2019/12/07/build-native-app-with-quarkus/","section":"blog","summary":"Uma aplica√ß√£o simples de Echo usando resteasy e swagger com quarkus","tags":["Java","Quarkus","Tutorial"],"title":"Construindo uma aplica√ß√£o nativa com Quarkus","type":"blog"},{"authors":["Beto Fonseca"],"categories":null,"content":"   √çndice  - 1. Vis√£o Geral - 2. Objetivo - 3. Setup - 4. Ok, ent√£o.. Aonde estou? - 5. Primeira P√°gina: Curr√≠culo - 6. Home Page: Revis√£o - 7. Postando - 8. Publicando - 9. Conclus√£o   \n1. Vis√£o Geral Eu finalmente decidi fazer um site no estilo Blog üèÜ. E n√£o, o Hugo que vamos falar neste post n√£o √© o Hugo Game üòÇ\nEnfim\u0026hellip; Eu gosto muito de tecnologia, viagens, cervejas e algumas outras coisa, por isso acho que posso compartilhar um pouco do que sei (ou acho que sei) com qualquer um que esteja disposto a ler sobre isso aqui ü§ì\nComo meu primeiro post, quero compartilhar minha experi√™ncia com Hugo, voc√™s poder√£o encontrar todo o c√≥digo fonte no meu reposit√≥rio do GitHub (preste aten√ß√£o na branch üòâ).\n2. Objetivo Pra mim fazer um blog n√£o deveria ser algo t√£o complexo de se criar, e na verdade n√£o √©. Para servi√ßos de blogs complexos com v√°rias funcionalidades especiais e que ainda precisam lidar com a carga de prover infraestrutura pra diversos clientes ao mesmo tempo, √© obviamente mais complexo de se manter como um projeto.\nMas esse n√£o √© o meu caso.\nO que eu preciso e de um lugar pra por minhas anota√ß≈çes, compartilhar algum conte√∫do que possa ser interessante pra outras pessoas e quem sabe iniciar conversas interessantes sobre tecnologia (principalmente, mas n√£o exclusivamente).\nEnt√£o fiz uma pesquisa e finalmente decidi usar o Hugo. Voc√™s encontrar√£o v√°rios posts comparando diversos geradores de sites est√°ticos (pra blogs ou sites de uso geral como o Hugo), mas eu n√£o vou entrar nesse m√©rito aqui. Se voc√™ quer pesquisar mais profundamente sobre esse item, voc√™ pode come√ßar por estas compara√ß≈çes interessantes aqui e aqui so pra come√ßar (links em ingl√™s).\nEnt√£o vamos bloggar ü§ì\n3. Setup  Para instalar o Hugo siga as intru√ß≈çes descritas aqui na documenta√ß√£o oficial;  Escolhi instalar com brew pois uso Mac e √© muito f√°cil;  Para criar meu projeto inicial eu segui os passos descritos aqui na documenta√ß√£o oficial do tema Academics;  Decidi usar o op√ß√£o \u0026lsquo;Install with Git\u0026rsquo; (instalar usando Git) apenas para manter os cr√©ditos para o reposit√≥rio oficial atrav√©s do link no github forked from üòÑ   Depois de fazer a instala√ß√£o b√°sica de acordo com a documenta√ß√£o, usei linha de comando bash para ir at√© o diret√≥rio do projeto e executei o seguinte comando:\nhugo server     Executando hugo server na linha de comando   Ent√£o ao acessar o link localhost √© poss√≠vel ver um site assim:\n   P√°gima Inicial   Muito bom, agora temos um template completo executando localmente üò¨\n4. Ok, ent√£o.. Aonde estou? Sim! Est√° vivo! Mas, ent√£o.. E agora? Tem um monte de arquivos pra todo lado e v√°rias p√°ginas que na realidade eu nem preciso. Encontrei um artigo interessante falando exatamente sobre isso aqui (ingl√™s) e √© um fato, agente se sente um pouco perdido.\nMas ok, primeiro as coisas primeiras: vamos limpar o c√≥digo e definir o MVP, certo?\n4.1. config.toml \u0026amp; params.toml N√£o h√° muito o que fazer aqui, apenas a url, informa√ß≈çes basicas e dados de contato (tamb√©m alguma configura√ß√£o do tema que achar necess√°rio). A documenta√ß√£o nos pr√≥prios arquivos s√£o muito boas e auto explicativas, mas voc√™ pode conhecer algumas funcionalidades extras na documenta√ß√£o do Academic.\n4.2. P√°ginas M√≠nimas e Organiza√ß√£o de Conte√∫do De acordo com a documenta√ß√£o do Hugo, a organiza√ß√£o b√°sica √© baseada em diret√≥rios e arquivos, como √© poss√≠vel ver nesse exemplo:\n. ‚îî‚îÄ‚îÄ content ‚îî‚îÄ‚îÄ about | ‚îî‚îÄ‚îÄ index.md // \u0026lt;- https://example.com/about/ ‚îú‚îÄ‚îÄ posts | ‚îú‚îÄ‚îÄ firstpost.md // \u0026lt;- https://example.com/posts/firstpost/ | ‚îú‚îÄ‚îÄ happy | | ‚îî‚îÄ‚îÄ ness.md // \u0026lt;- https://example.com/posts/happy/ness/ | ‚îî‚îÄ‚îÄ secondpost.md // \u0026lt;- https://example.com/posts/secondpost/ ‚îî‚îÄ‚îÄ quote ‚îú‚îÄ‚îÄ first.md // \u0026lt;- https://example.com/quote/first/ ‚îî‚îÄ‚îÄ second.md // \u0026lt;- https://example.com/quote/second/  Ent√£o decidi tentar trazer algum consenso pra esse caos usando um padr√£o simples: no diret√≥rio posts vou organizar as postagens usando uma estrutura de data ano/m√™s/dia e por todos os arquivos relativos ao post no mesmo diret√≥rio, se eu precisar criar multiplas postagens no mesmo dia eu tamb√©m posso controlar com um diret√≥rio pra reservar o nome do post: .content/posts/2019/11/30/meu-post-bacana/index.md. Tamb√©m vou renomear o diret√≥rio posts para blog (√© mais relevante no meu entendimento, tamb√©m considerando a url). Ent√£o o conte√∫do do blog ser√° organizado assim:\n. ‚îî‚îÄ‚îÄ content ‚îî‚îÄ‚îÄ blog ‚îî‚îÄ‚îÄ 2019 ‚îî‚îÄ‚îÄ 11 | ‚îî‚îÄ‚îÄ 30 | ‚îî‚îÄ‚îÄ developing_this_blog_with_hugo.md // \u0026lt;- https://jjbeto.com/blog/2019/11/30/developing_this_blog_with_hugo/ ‚îî-- 12 ‚îî-- 01 ‚îî‚îÄ‚îÄ following_awesome_post.md // \u0026lt;- https://jjbeto.com/blog/2019/12/05/following_awesome_post/  Dessa forma √© poss√≠vel agregar todos os conte√∫dos relacionados em um mesmo lugar, tamb√©m chegar rapidamente at√© uma postagem pela data e de repente posso at√© criar um plugin pra fazer algo mais personalizado no futuro (quem sabe?).\nFora a organiza√ß√£o do post, tamb√©m preciso decidir sobre o conte√∫do em geral do site, ent√£o inicialmente vou preparar o seguinte:\n   P√°gina Motiva√ß√£o     Sobre (p√°gina padr√£o de autores do Hugo) Curr√≠culo m√≠nimo   Curr√≠culo √â bom ter um online e tamb√©m j√° testar algumas funcionalidades üòÑ   Contato Er, disponibilizar algumas formas de contato via redes sociais   P√°gina b√°sica do /blog P√°gina para agregar a lista de postagens    Depois √© s√≥ adicionar outras p√°ginas com mais funcionalidades, como:\n Cursos: para p√°ginas com conte√∫do no estilo tutorial como esse aqui ü§î Palestras: para meetups e/ou palestras que eu ache interessante de acompanhar  O plano b√°sico est√° todo definido. Vamos come√ßar a trabalhar nele üòÑ\n5. Primeira P√°gina: Curr√≠culo A p√°gina padr√£o do tema Academic tem componentes demais (claro, eles querem exibir o m√°ximo poss√≠vel de funcionalidades, certo?), e como esse tema √© mais voltado √† academia/ensino em geral, tem v√°rias ferramentas e p√°ginas muito boas para ajudar a mostrar minhas habilidades, mas eu quero uma p√°gina inicial mais limpa, com apenas as √∫ltimas postagens e uma apresenta√ß√£o simplificada de quem sou eu.\nEnt√£o vou criar o diret√≥rio resume (em portugu√™s ser√° traduzido pra curriculo usando uma feature do Hugo chamada slug, mas falarei disso em outra postagem - eu acho) e testar como usar as funcionalidades do Hugo l√°, transferindo tudo relacionado ao tema da home para resume. Isso pode limpar a p√°gina inicial mas mantendo v√°rias coisas legais. Voc√™ pode fazer um fork da √∫ltima vers√£o do meu curr√≠culo no meu GitHub e atualizar com seus pr√≥prios dados e adicionar o diret√≥rio no seu pr√≥prio site (se utilizar Hugo).\n Criar o diret√≥rio ./content/resume Criar arquivo ./content/resume/index.md que define o widget: no meu caso caso √© apenas uma p√°gina vazia onde adicionarei sess√µes exatamente como na p√°gina inicial\n--- title: \u0026quot;Curr√≠culo\u0026quot; date: \u0026quot;2019-11-30T12:00:00Z\u0026quot; type: \u0026quot;widget_page\u0026quot; ---  Copiar ./content/home/about.md para .content/resume/ para funcionar da mesma forma que a p√°gina inicial\n Mover ./content/home/accomplishments.md, ./content/home/skills.md e ./content/home/experience.md para .content/resume/\n Duplicar ./content/resume/accomplishments.md para ./content/resume/certifications.md para reusar esta funcionalidade, separando certifica√ß√µes de cursos\n Preencher todos os dados! Mudar tamb√©m os dados em ./content/authors/admin/_index.md (que eu renomeei para ./content/authors/jjbeto/_index.md) e atualizar as outras p√°ginas em .content/resume/ com dados customizados j√° √© o suficiente para ter um resultado muito bom\n     Curr√≠culo inicial   Tamb√©m usei um pequeno truque de CSS descrito aqui, assim pude criar uma n√∫vem de tags pra listar as tecnologias que tenho experi√™ncia:\n   N√∫vem de tags   Como fazer isso? Voc√™ pode verificar no c√≥digo fonte, mas pra ser mais f√°cil vou listar aqui. S√£o necess√°rios apenas 2 itens:\n\u0026lt;!-- O HTML para a nuvem --\u0026gt; \u0026lt;div class=\u0026quot;cloud_wrapper\u0026quot;\u0026gt; \u0026lt;ul class=\u0026quot;cloud\u0026quot;\u0026gt; \u0026lt;li\u0026gt;Item 01\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Item 02\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; ... \u0026lt;!-- O CSS para a nuvem --\u0026gt; \u0026lt;style\u0026gt; .cloud_wrapper { text-align: center; } .cloud { display: inline; list-style-type: none; width: 80%; margin: auto; } .cloud li { list-style: none; display: inline; margin: 2px; } .cloud li:nth-of-type(3n+1) { font-size: 1.25em; } .cloud li:nth-of-type(4n+3) { font-size: 1.5em; } .cloud li:nth-of-type(5n-3) { font-size: 1em; } \u0026lt;/style\u0026gt;  Outra coisa que adicionei foi os √≠cones do devicons para poder mostrar imagens da stack que estou utilizando!\nPara fazer isso apenas adicionei em ./content/resume/skills.md a refer√™ncia do estilo:\n\u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://cdn.rawgit.com/konpa/devicon/df6431e323547add1b4cf45992913f15286456d3/devicon.min.css\u0026quot;\u0026gt;  Assim posso utilizar √≠cones dessa forma:\n[[feature]] icon = \u0026quot;apache-plain\u0026quot; icon_pack = \u0026quot;devicon\u0026quot; name = \u0026quot;Apache\u0026quot; description = \u0026quot;\u0026quot;  Com certeza existe uma forma melhor de adicionar √≠cones no Hugo de forma global, assim eu poderia usar esses √≠cones em qualquer lugar do site, mas n√£o fiz isso por enquanto apenas porque quero usar esses √≠cones exclusivamente em ./content/resume/skills.md, logo n√£o preciso obrigar baixar o CSS em qualquer p√°gina lida.\nSensacional, n√©?! Agora podemos brincar com o resto do conte√∫do e mudar outros pontos que sejam interessantes e/ou √∫teis.\n6. Home Page: Revis√£o Agora que a p√°gina do curr√≠culo est√° pronta, podemos terminar a p√°gina inicial:\n Activate ./content/home/hero.md para usar como \u0026ldquo;bem vindo\u0026rdquo;; Desabilitar as seguintes p√°ginas (sem remover pois eu posso precisar dessas p√°ginas em breve):  ./content/home/featured.md; ./content/home/projects.md; ./content/home/publications.md; ./content/home/tags.md; ./content/home/talks.md;   Eu renomeei o diret√≥rio ./content/post para ./content/blog anteriormente, logo o widget ./content/home/posts.md parou de funcionar! N√£o, na verdade o tipo de itens listados por padr√£o √© post, ent√£o eu apenas mudei para blog (nome do diret√≥rio) e tudo voltou a funcionar.\n[content] # Page type to display. E.g. post, talk, or publication. page_type = \u0026quot;blog\u0026quot;  Outra pequena mudan√ßa que eu quiz fazer foi o favicon (aquele √≠cone que fica no topo do navegador). Para mudar isso primeiro precisei encontrar onde ele estava sendo usado: ./themes/academic/layout/partials/site_head.html na linha 125:\n\u0026lt;link rel=\u0026quot;icon\u0026quot; type=\u0026quot;image/png\u0026quot; href=\u0026quot;{{ \u0026quot;img/icon-32.png\u0026quot; | relURL }}\u0026quot;\u0026gt;  O tema Academics tem o seu pr√≥prio icone guardado em ./themes/academic/static/img/icon-32.png, ent√£o tudo que eu precisei fazer foi sobreescrever isso com o meu pr√≥prio √≠cone em .static/img, adicionando uma imagem PNG com o mesmo nome ü•á\nMas qual √≠cone usar? ü§î\nDecidi n√£o investir muito tempo nisso por agora, ent√£o fui nesse site muito legal e gerei um √≠cone baseado no Devicons! Apenas guardei o PNG em .static/img/icon-32.png e est√° pronto!\nOk, p√°gina inicial completamente limpa e tamb√©m uma p√°gina de curr√≠culo pronta!\n7. Postando Para criar um post precisamos apenas escrever um monte de coisas legais, ne?\nA resposta √©: na verdade n√£o.\nEu sou meio met√≥dico, n√£ gosto de ler blogs ou sites que parecem estar sobre carregados de conte√∫do misturado e com informa√ß√£o demais em um s√≥ lugar.\nPor conta disso resolvi pesquisar mais sobre como organizar meus posts de um jeito que outras pessoas possam entender e\u0026hellip; N√£o tive muita sorte üòÖ\nEnt√£o como uma primeira tentativa, decidi postar como mini-publica√ß√µes, como um dos meus blogs favoritos relacionados a Java faz (Baeldung):\n Criar uma estrutura b√°sica para um post:  Vis√£o Geral Items Conclus√£o  Usar todas as ferramentas poss√≠veis para mostrar exemplos Disponibilizar um c√≥digo funcional em um reposit√≥rio ao final para mostrar um demo operacional  Como ferramenta extra, vou criar um √çndice como primeiro item em cada postagem para facilitar a navega√ßao.\n√â poss√≠vel verificar no c√≥digo fonte desta p√°gina, mas vou listar os pontos que me tomaram algum tempinho extra de como fazer:\n7.1. Anchors e √çndine N√£o encontrei uma forma f√°cil/pronta pra criar esse √çndice no tema do Academics, mas encontrei nesse post um link bem interessante (em ingl√™s) que me ajudaram a desenvolver uma vers√£o inicial.\nAgora o post come√ßa assim:\n\u0026lt;aside\u0026gt; \u0026lt;div class=\u0026quot;ox-hugo-toc toc\u0026quot;\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h2\u0026gt;√çndice\u0026lt;/h2\u0026gt; \u0026lt;/header\u0026gt; - [1. Vis√£o Geral](#visao-geral) - [2. Item](#item) - [3. Conclus√£o](#conclusao) \u0026lt;/div\u0026gt; \u0026lt;/aside\u0026gt; \u0026lt;!--endtoc--\u0026gt;  Dessa forma √© muito simples de acompanhar a postagem em si e o c√≥digo tamb√©m. Se algum leitor souber de uma forma melhor (ou mais bonita) de fazer isso, por favor entre em contato!\nSe voc√™ n√£o sabe o que √© um HTML Anchor, voc√™ deveria pesquisar mais sobre o tema üòÑ\n7.2. Lidando com Imagens Como um framework guiado por diret√≥rios e arquivos, vou guardar todas as imagens e arquivos necess√°rios para cada post no mesmo diret√≥rio. E poss√≠vel verificar no c√≥digo fonte dessa postagem, e no final foi incrivelmente f√°cil de mostrar uma imagem:\n![This is an image](featured.jpg)  O √∫nico problema √© que dessa forma a imagem e adicionada diretamente no corpo da p√°gina de forma est√°tica, e dependendo da imagem se torna dificil ler algum conte√∫do ou ver detalhes de forma correta. Ent√£ encontrei uma forma mais interessante no diret√≥rio de exemplos com formas mais elegantes de exibir imagens usando c√≥digo Go, para mais detalhes veja a documenta√ß√£o.\nAh e tamb√©m √© poss√≠vel referenciar imagens via URL üòÑ\n8. Publicando  TL;TR\nExecute o seguinte comando para gerar a vers√£o final do seu site:\nhugo --gc --minify  Dessa forma um diret√≥rio public ser√° gerado com todo o site est√°tico pronto pra ser publicado, a √∫ltima coisa que falta para completar √© commitar o diret√≥rio public em um reposit√≥rio do GitHub com o padr√£o \u0026lt;seu usu√°rio github\u0026gt;.github.io.\nIsso √© tudo, voc√™ pode acessar seu site hospedado pelo GitHub Pages em \u0026lt;seu usu√°rio github\u0026gt;.github.io e ser feliz ‚≠êÔ∏è\n  Existe muito conte√∫do explicando como fazer o setup de sites usando Hugo no GitHub Pages, por exemplo na pr√≥pria documenta√ß√£o do Hugo.\nMas para ser honesto, acho que isso deve ser feito automaticamente por algum servi√ßo/ferramenta de CI/CD. Por ser um pouco mais complexo, vou deixar isso pra um pr√≥ximo post!\n9. Conclus√£o Esse foi um loooooongo primeiro post, wow! No pr√≥ximo vou tentar fazer um pouco mais curto (quem sabe).\nHugo √© muito √∫til, tem uma comunidade gigante, √≥timos temas e plugins e uma extensa documenta√ß√£o. E obiviamente uma excelente ferramenta pra se usar, muito intuitivo e facil de se acostumar pra usar.\nEstou ansioso para usar novas funcionalidades, e esse post em Portugu√™s j√° est√° marcando uma evolu√ß√£o do site, pois estou estendendo para gerar conte√∫do agora em Portugu√™s tambem (o site foi pensado inicialmente pra ser somente em ingl√™s), mas tamb√©m quero explorar outras funcionalidades como Google Analytics e Coment√°rios com redes sociais! Fique ligado para novidades, onde falarei sobre performance tunning no Hugo, CI/CD (com GitHub Actions) e mais.\n","date":1575122400,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1575122400,"objectID":"a9724377cd43fdc551e2fe930d396151","permalink":"https://jjbeto.com/pt/blog/2019/11/30/setup_completo_para_este_site_parte_1/","publishdate":"2019-11-30T14:00:00Z","relpermalink":"/pt/blog/2019/11/30/setup_completo_para_este_site_parte_1/","section":"blog","summary":"Crie um site simples e f√°cil, de gra√ßa e em tempo recorde.","tags":["Hugo","Tutorial"],"title":"Setup Completo Para Este Site - Parte 1","type":"blog"},{"authors":null,"categories":null,"content":"","date":1574769600,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1574769600,"objectID":"593b5765dd99779b785681d321323b41","permalink":"https://jjbeto.com/pt/curriculo/","publishdate":"2019-11-26T12:00:00Z","relpermalink":"/pt/curriculo/","section":"","summary":"","tags":null,"title":"Curr√≠culo","type":"widget_page"}]