<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>/jjbeto</title><link>https://jjbeto.com/pt/authors/jjbeto/</link><atom:link href="https://jjbeto.com/pt/authors/jjbeto/index.xml" rel="self" type="application/rss+xml"/><description>/jjbeto</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>pt</language><lastBuildDate>Sat, 07 Dec 2019 14:00:00 +0000</lastBuildDate><image><url>https://jjbeto.com/img/avatar.jpg</url><title>/jjbeto</title><link>https://jjbeto.com/pt/authors/jjbeto/</link></image><item><title>Construindo uma aplica√ß√£o nativa com Quarkus</title><link>https://jjbeto.com/pt/blog/2019/12/07/build-native-app-with-quarkus/</link><pubDate>Sat, 07 Dec 2019 14:00:00 +0000</pubDate><guid>https://jjbeto.com/pt/blog/2019/12/07/build-native-app-with-quarkus/</guid><description>
&lt;p&gt;&lt;aside&gt;
&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;header&gt;
&lt;h2&gt;√çndice&lt;/h2&gt;
&lt;/header&gt;
- &lt;a href=&#34;#visao-geral&#34;&gt;1. Vis√£o Geral&lt;/a&gt;
- &lt;a href=&#34;#echo-app&#34;&gt;2. Aplicativo Echo&lt;/a&gt;
- &lt;a href=&#34;#geracao-do-projeto&#34;&gt;3. Gera√ß√£o do Projeto&lt;/a&gt;
- &lt;a href=&#34;#swagger&#34;&gt;4. Swagger&lt;/a&gt;
- &lt;a href=&#34;#dockerhub&#34;&gt;5. DockerHub&lt;/a&gt;
- &lt;a href=&#34;#conclusao&#34;&gt;6. Conclus√£o&lt;/a&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;!--endtoc--&gt;&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;1. Overview&lt;/h2&gt;
&lt;p&gt;Eu quero falar de 88Microservi√ßos**, mas ent√£o eu percebi que na verdade eu n√£o muito material publicado que eu possa usar pra isso, como &lt;strong&gt;um microservi√ßo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Por conta disso eu decidi criar um pequeno microservi√ßo do zero, o qual eu possa reusar em futuros artigos pra fazer mais coisas legais üòù&lt;/p&gt;
&lt;p&gt;Pra isso eu escolhi um framework muito falado hoje em dia, que √© bem interessante: &lt;a href=&#34;https://quarkus.io/&#34; target=&#34;_blank&#34;&gt;Quarkus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A id√©ia √© criar um servi√ßo simples de echo: eu mando um texto e a API responde o mesmo texto em PLAINTEXT. Al√©m disso eu adicionarei um parametro de time pra decidir em quanto tempo eu quero que essa resposta seja retornada.&lt;/p&gt;
&lt;h2 id=&#34;echo-app&#34;&gt;2. Aplicativo Echo&lt;/h2&gt;
&lt;p&gt;Um endpoint REST simples que retorna o mesmo texto que eu enviar como parametro. Tamb√©m deve ser poss√≠vel pedir um tempo de espera em milisegundos pra API responder.&lt;/p&gt;
&lt;p&gt;Voc√™ pode encontrar o c√≥digo fonte completo deste exemplo no meu &lt;a href=&#34;https://github.com/jjbeto/echo&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;, ou voc√™ tamb√©m pode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Baixar a imagem diretamente do &lt;a href=&#34;https://hub.docker.com/r/jjbeto/echo&#34; target=&#34;_blank&#34;&gt;DockerHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;geracao-do-projeto&#34;&gt;3. Gera√ß√£o do Projeto&lt;/h2&gt;
&lt;p&gt;Eu segui as etapas descritas na documenta√ß√£o do &lt;a href=&#34;https://quarkus.io/guides/openapi-swaggerui&#34; target=&#34;_blank&#34;&gt;Quarkus&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Criar o projeto base:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn io.quarkus:quarkus-maven-plugin:1.0.1.Final:create \
-DprojectGroupId=com.jjbeto \
-DprojectArtifactId=echo \
-DclassName=com.jjbeto.echo.EchoResource \
-Dpath=/echo \
-Dextensions=resteasy-jsonb
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Removi .mvn do git: adicionei &lt;code&gt;.mvn&lt;/code&gt; no &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Criar a l√≥gica da aplica√ß√£o: retornar o texto parametrizado como PLAINTEXT e aceitar um query parameter como tempo de espera antes da API retornar a resposta.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mudar o path root pra ser da pr√≥pria aplica√ß√£o;&lt;/li&gt;
&lt;li&gt;Retornar a mensagem no path parameter de volta para o cliente;&lt;/li&gt;
&lt;li&gt;Adicionar um tempo de espera de acordo com o query parameter;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;swagger&#34;&gt;4. Swagger&lt;/h2&gt;
&lt;p&gt;Vamos tornar essa API mais amig√°vel pra ser consumida por outras aplica√ß≈çes, adicionando Swagger e colocando algumas descri√ß≈çes, explicando pra que serve cada par√¢metro. Com Quarkus isso √© bem facil e pode ser encontrado como fazer diretamente na &lt;a href=&#34;https://quarkus.io/guides/openapi-swaggerui&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Primeiramente precisamos adicionar o Swagger ao projeto, executando o comando a seguir diretamente na raiz do projeto:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mvnw quarkus:add-extension -Dextensions=&amp;quot;openapi&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas eu n√£o gosto do endpoint gerado automaticamente &lt;code&gt;/openapi&lt;/code&gt; üòí, ent√£o eu vou mudar para &lt;code&gt;/swagger&lt;/code&gt;. Pra isso basta mudar uma propriedade em &lt;code&gt;application.properties&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;quarkus.smallrye-openapi.path=/swagger
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O endpoint &lt;code&gt;/swagger&lt;/code&gt; vai fornecer um arquivo Yaml descrevendo a API.&lt;/p&gt;
&lt;p&gt;Eu tamb√©m quero ativar o SwaggerUI:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;quarkus.swagger-ui.always-include=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O endpoint padr√£o para o SwaggerUI √© &lt;a href=&#34;http://localhost:8080/swagger-ui&#34; target=&#34;_blank&#34;&gt;http://localhost:8080/swagger-ui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Muito bom! Agora vamos seguir em frente e adicionar algumas descri√ß≈çes para que usu√°rios da API saibam como utiliza-la. De acordo com a &lt;a href=&#34;https://swagger.io/specification/&#34; target=&#34;_blank&#34;&gt;especifica√ß√£o&lt;/a&gt; n√≥s precisamos usar um arquivo &lt;code&gt;openapi.yml&lt;/code&gt; para adicionar dados customizados:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Acesse &lt;code&gt;http://localhost:8080/swagger&lt;/code&gt; para baixar o arquivo &lt;code&gt;openapi.yml&lt;/code&gt; atualizado&lt;/li&gt;
&lt;li&gt;Salve &lt;code&gt;openapi.yml&lt;/code&gt; no diret√≥rio &lt;code&gt;./src/main/resources/META-INF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Adicione algumas descri√ß≈çes e informa√ß≈çes sobre a API&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Agora voc√™ pode verificar novamente o endere√ßo local &lt;a href=&#34;http://localhost:8080/swagger-ui&#34; target=&#34;_blank&#34;&gt;http://localhost:8080/swagger-ui&lt;/a&gt; e verifique o resultado üòÉ&lt;/p&gt;
&lt;h2 id=&#34;dockerhub&#34;&gt;5. DockerHub&lt;/h2&gt;
&lt;p&gt;Eu quero que seja poss√≠vel que qualquer um possa baixar a imagem diretamente do DockerHub.&lt;/p&gt;
&lt;h3 id=&#34;construindo-uma-imagem-nativa&#34;&gt;Construindo uma Imagem Nativa&lt;/h3&gt;
&lt;p&gt;Quarkus permite a cria√ß√£o de um app completamente nativo, onde uma JVM n√£o √© necess√°ria. Isso √© incrivel principalmente quando se trata de aplica√ß≈çes simples como o &lt;strong&gt;Echo&lt;/strong&gt;, por que a aplica√ß√£o fica muito r√°pida e a imagem para execu√ß√£o muito pequena!&lt;/p&gt;
&lt;p&gt;Para construir a imagem nativa n√≥s precisamos de alguns pre-requisitos conforme mencionado na &lt;a href=&#34;https://quarkus.io/guides/building-native-image&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o do Quarkus&lt;/a&gt;, por favor siga estes passos antes de continuar.&lt;/p&gt;
&lt;p&gt;Notas: fique atento da vers√£o do GraalVM, se a que voc√™ esta instalando √© compat√≠vel com a vers√£o atual do Quarkus. O Quarkus est√° sempre em evolu√ß√£o e fica o mais pr√≥ximo poss√≠vel das √∫ltimas atualiza√ß≈çes do GraalVM, mas √© preciso verificar se a vers√£o atual √© compat√≠vel: no momento que estou escrevendo este artigo o GraalVM est√° na vers√£o 19.3.0.r11 enquanto o Quarkus √© compat√≠vel apenas com &lt;strong&gt;GraalVM 19.2.1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Depois de instalar o GraalVM (eu usei &lt;a href=&#34;https://sdkman.io/&#34; target=&#34;_blank&#34;&gt;sdkman&lt;/a&gt;), Docker (ou podman) e as suas dependencias, voc√™ pode construir uma imagem nativa com o comando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mvnw package -Pnative -Dquarkus.native.container-build=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De acordo com o &lt;strong&gt;Quarkus&lt;/strong&gt; a constru√ß√£o de uma imagem √© muito simples:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quarkus.io/guides/images/native-executable-process.png&#34; alt=&#34;Quarkus Build Process&#34; /&gt;&lt;/p&gt;
&lt;p&gt;TL;TR √© exatamente como construir um execut√°vel Jar com todas as suas dependencias (fat jar), mas a execu√ß√£o para construir uma imagem nativa demora mais tempo pra executar e custa mais recursos da m√°quina.&lt;/p&gt;
&lt;h4 id=&#34;notas-importantes-sobre-o-processo-de-constru√ß√£o&#34;&gt;Notas importantes sobre o processo de constru√ß√£o&lt;/h4&gt;
&lt;p&gt;Ao construir a imagem usando Docker no meu Mac, eu recebi este erro:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -v /Users/beto/IdeaProjects/opensource/echo/target/echo-1.0-SNAPSHOT-native-image-source-jar:/project:z --rm quay.io/quarkus/ubi-quarkus-native-image:19.2.1 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar echo-1.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http -H:-JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace echo-1.0-SNAPSHOT-runner
[echo-1.0-SNAPSHOT-runner:25] classlist: 12,165.10 ms
[echo-1.0-SNAPSHOT-runner:25] (cap): 1,720.23 ms
[echo-1.0-SNAPSHOT-runner:25] setup: 3,699.11 ms
14:23:23,903 INFO [org.jbo.threads] JBoss Threads version 3.0.0.Final
[echo-1.0-SNAPSHOT-runner:25] (typeflow): 17,087.39 ms
[echo-1.0-SNAPSHOT-runner:25] (objects): 12,944.17 ms
[echo-1.0-SNAPSHOT-runner:25] (features): 489.73 ms
[echo-1.0-SNAPSHOT-runner:25] analysis: 31,843.79 ms
[echo-1.0-SNAPSHOT-runner:25] (clinit): 622.07 ms
[echo-1.0-SNAPSHOT-runner:25] universe: 1,768.77 ms
[echo-1.0-SNAPSHOT-runner:25] (parse): 42,885.71 ms
[echo-1.0-SNAPSHOT-runner:25] (inline): 49,278.76 ms
[echo-1.0-SNAPSHOT-runner:25] (compile): 53,007.49 ms
[echo-1.0-SNAPSHOT-runner:25] compile: 158,081.96 ms
Error: Image build request failed with exit status 137
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 03:55 min
[INFO] Finished at: 2019-12-07T15:26:48+01:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal io.quarkus:quarkus-maven-plugin:1.0.1.Final:build (default) on project echo: Failed to build a runnable JAR: Failed to augment application classes: Build failure: Build failed due to errors
[ERROR] [error]: Build step io.quarkus.deployment.pkg.steps.NativeImageBuildStep#build threw an exception: java.lang.RuntimeException: Failed to build native image
[ERROR] at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.build(NativeImageBuildStep.java:289)
[ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[ERROR] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[ERROR] at java.lang.reflect.Method.invoke(Method.java:498)
[ERROR] at io.quarkus.deployment.ExtensionLoader$1.execute(ExtensionLoader.java:941)
[ERROR] at io.quarkus.builder.BuildContext.run(BuildContext.java:415)
[ERROR] at io.quarkus.builder.BuildContext$$Lambda$109.0000000055C01130.run(Unknown Source)
[ERROR] at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
[ERROR] at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2011)
[ERROR] at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1535)
[ERROR] at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1426)
[ERROR] at java.lang.Thread.run(Thread.java:819)
[ERROR] at org.jboss.threads.JBossThread.run(JBossThread.java:479)
[ERROR] Caused by: java.lang.RuntimeException: Image generation failed
[ERROR] at io.quarkus.deployment.pkg.steps.NativeImageBuildStep.build(NativeImageBuildStep.java:278)
[ERROR] ... 13 more
[ERROR] -&amp;gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Eu encontrei uma issue no &lt;a href=&#34;https://github.com/quarkusio/quarkus/issues/1140&#34; target=&#34;_blank&#34;&gt;GitHub do Quarkus&lt;/a&gt; relativo a esse erro e, quando mudei a mem√≥ria do meu Docker para 3GB (ao inv√©s dos 2GB padr√£o), o build funcionou:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -v /Users/beto/IdeaProjects/opensource/echo/target/echo-1.0-SNAPSHOT-native-image-source-jar:/project:z --rm quay.io/quarkus/ubi-quarkus-native-image:19.2.1 -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar echo-1.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http -H:-JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace echo-1.0-SNAPSHOT-runner
[echo-1.0-SNAPSHOT-runner:24] classlist: 8,587.26 ms
[echo-1.0-SNAPSHOT-runner:24] (cap): 1,512.26 ms
[echo-1.0-SNAPSHOT-runner:24] setup: 3,112.68 ms
14:29:25,687 INFO [org.jbo.threads] JBoss Threads version 3.0.0.Final
[echo-1.0-SNAPSHOT-runner:24] (typeflow): 19,795.33 ms
[echo-1.0-SNAPSHOT-runner:24] (objects): 17,973.88 ms
[echo-1.0-SNAPSHOT-runner:24] (features): 486.83 ms
[echo-1.0-SNAPSHOT-runner:24] analysis: 39,734.95 ms
[echo-1.0-SNAPSHOT-runner:24] (clinit): 582.32 ms
[echo-1.0-SNAPSHOT-runner:24] universe: 2,178.24 ms
[echo-1.0-SNAPSHOT-runner:24] (parse): 5,333.97 ms
[echo-1.0-SNAPSHOT-runner:24] (inline): 9,494.69 ms
[echo-1.0-SNAPSHOT-runner:24] (compile): 29,119.41 ms
[echo-1.0-SNAPSHOT-runner:24] compile: 46,351.15 ms
[echo-1.0-SNAPSHOT-runner:24] image: 3,879.22 ms
[echo-1.0-SNAPSHOT-runner:24] write: 2,057.79 ms
[echo-1.0-SNAPSHOT-runner:24] [total]: 106,328.41 ms
[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 111589ms
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 02:00 min
[INFO] Finished at: 2019-12-07T15:30:59+01:00
[INFO] ------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;preparar-a-imagem&#34;&gt;Preparar a Imagem&lt;/h4&gt;
&lt;p&gt;Para criar a imagem localmente podemos executar o seguinte comando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -f src/main/docker/Dockerfile.native -t jjbeto/echo .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O resultado:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Sending build context to Docker daemon 36.77MB
Step 1/6 : FROM registry.access.redhat.com/ubi8/ubi-minimal
latest: Pulling from ubi8/ubi-minimal
645c2831c08a: Pull complete
5e98065763a5: Pull complete
Digest: sha256:32fb8bae553bfba2891f535fa9238f79aafefb7eff603789ba8920f505654607
Status: Downloaded newer image for registry.access.redhat.com/ubi8/ubi-minimal:latest
---&amp;gt; 469119976c56
Step 2/6 : WORKDIR /work/
---&amp;gt; Running in 4f74acf2fa46
Removing intermediate container 4f74acf2fa46
---&amp;gt; fc9bee94a0d0
Step 3/6 : COPY target/*-runner /work/application
---&amp;gt; b9a029618b01
Step 4/6 : RUN chmod 775 /work
---&amp;gt; Running in a37dd1eda18d
Removing intermediate container a37dd1eda18d
---&amp;gt; a686c7dba3ed
Step 5/6 : EXPOSE 8080
---&amp;gt; Running in 21f6e36ba8cb
Removing intermediate container 21f6e36ba8cb
---&amp;gt; 5d0d75543315
Step 6/6 : CMD [&amp;quot;./application&amp;quot;, &amp;quot;-Dquarkus.http.host=0.0.0.0&amp;quot;]
---&amp;gt; Running in 8a2dd88f45b2
Removing intermediate container 8a2dd88f45b2
---&amp;gt; 33592d7cd99d
Successfully built 33592d7cd99d
Successfully tagged jjbeto/echo:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se voc√™ listar as imagens locais:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker images
REPOSITORY TAG IMAGE ID CREATED SIZE
jjbeto/echo latest 33592d7cd99d 12 seconds ago 142MB
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora podemos finalmente executar nossa imagem:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -i --rm -p 8080:8080 jjbeto/echo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E o resultado:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;2019-12-07 14:48:13,719 INFO [io.quarkus] (main) echo 1.0-SNAPSHOT (running on Quarkus 1.0.1.Final) started in 0.012s. Listening on: http://0.0.0.0:8080
2019-12-07 14:48:13,719 INFO [io.quarkus] (main) Profile prod activated.
2019-12-07 14:48:13,719 INFO [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb, smallrye-openapi, swagger-ui]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sensacional! E se acessarmos o localhost:&lt;/p&gt;
&lt;figure&gt;
&lt;a data-fancybox=&#34;&#34; href=&#34;localhost-8080.png&#34; data-caption=&#34;Localhost executando na porta 8080&#34;&gt;
&lt;img src=&#34;localhost-8080.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;
&lt;figcaption&gt;
Localhost executando na porta 8080
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Mas&amp;hellip; A imagem ainda √© muito grande! 142MB n√£o √© um bom tamanho legal pra um servi√ßo t√£o pequeno, certo?&lt;/p&gt;
&lt;p&gt;Eu mudei o arquivo &lt;code&gt;.src/main/docker/Dockerfile.native&lt;/code&gt; para usar o m√≠nimo necess√°rio de arquivos da imagem &lt;code&gt;debian:10-slim&lt;/code&gt;, seguindo &lt;a href=&#34;https://github.com/quarkusio/quarkus/issues/326&#34; target=&#34;_blank&#34;&gt;esse conselho&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Stage 1 : intermediate container to copy the needed dynamic libraries
FROM debian:10-slim AS debian
## Stage 2 : create the final docker image
FROM scratch
COPY target/*-runner /bin/app
COPY --from=debian /lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2
COPY --from=debian /lib/x86_64-linux-gnu/ld-2.28.so \
/lib/x86_64-linux-gnu/libm.so.6 /lib/x86_64-linux-gnu/libm-2.28.so \
/lib/x86_64-linux-gnu/libpthread.so.0 /lib/x86_64-linux-gnu/libpthread-2.28.so \
/lib/x86_64-linux-gnu/libdl.so.2 /lib/x86_64-linux-gnu/libdl-2.28.so \
/lib/x86_64-linux-gnu/libz.so.1 /lib/x86_64-linux-gnu/libz.so.1.2.11 \
/lib/x86_64-linux-gnu/librt.so.1 /lib/x86_64-linux-gnu/librt-2.28.so \
/lib/x86_64-linux-gnu/libc.so.6 /lib/x86_64-linux-gnu/libc-2.28.so \
/lib/x86_64-linux-gnu/
EXPOSE 8080
CMD [&amp;quot;/bin/app&amp;quot;, &amp;quot;-Dquarkus.http.host=0.0.0.0&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E agora a minha imagem tem um tamanho mais interessante: 44.5MB&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker images
REPOSITORY TAG IMAGE ID CREATED SIZE
jjbeto/echo latest 3d7de934bcd4 29 seconds ago 44.5MB
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas o resultado final no DockerHub √© diferente:&lt;/p&gt;
&lt;figure&gt;
&lt;a data-fancybox=&#34;&#34; href=&#34;dockerhub.png&#34; data-caption=&#34;Imagem no DockerHub&#34;&gt;
&lt;img src=&#34;dockerhub.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;
&lt;figcaption&gt;
Imagem no DockerHub
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;15MB?? Agora sim!! üòé&lt;/p&gt;
&lt;p&gt;Voc√™ sabe como torn√°-la ainda menor? Por favor me manda uma mensagem! üì´&lt;/p&gt;
&lt;h4 id=&#34;como-publicar-no-dockerhub&#34;&gt;Como Publicar no DockerHub?&lt;/h4&gt;
&lt;p&gt;Para publicar a imagem no DockerHub √© muito simples:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Login com o comando &lt;code&gt;docker login&lt;/code&gt; e usar seu usu√°rio/senha&lt;/li&gt;
&lt;li&gt;Enviar sua imagem local para o reposit√≥rio remoto com o comando &lt;code&gt;docker push &amp;lt;image_name&amp;gt;&lt;/code&gt;, no meu caso &lt;code&gt;docker push jjbeto/echo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;V√° at√© o &lt;a href=&#34;https://hub.docker.com/r/jjbeto/echo&#34; target=&#34;_blank&#34;&gt;DockerHub&lt;/a&gt; e verifique o resultado üéâ&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;conclusao&#34;&gt;6. Conclus√£o&lt;/h2&gt;
&lt;p&gt;Quarkus √© uma ferramenta incr√≠vel e renova mais uma vez o poder do Java no mundo atual, na minha opini√£o. √â f√°cio de usar, j√° possui uma grande lista de ferramentas que podem ser usadas em conjunto, como Hibernate, Vert.x e MicroProfile.&lt;/p&gt;
&lt;p&gt;Mas por favor n√£o se engane, Quarkus n√£o √© pra todo mundo e nem pra todo projeto! Como √© construido usando GraalVM, n√£o √© poss√≠vel usar qualquer lib que voc√™ encontrar, ou voc√™ pode encontrar problemas como reflections por exemplo.&lt;/p&gt;
&lt;p&gt;Se voc√™ puder usar as libs padr√µes do Quarkus, com certeza ele √© um framework pra se levar em considera√ß√£o no seu projeto.&lt;/p&gt;
&lt;p&gt;Sobre o Echo App, Quarkus foi uma boa escolha! O app foi gerado j√° pensando um pouco mais na frente, quando eu for fazer alguns testes com ambientes de microservi√ßos, fiquem ligados! üòé&lt;/p&gt;</description></item><item><title>Setup Completo Para Este Site - Parte 1</title><link>https://jjbeto.com/pt/blog/2019/11/30/setup_completo_para_este_site_parte_1/</link><pubDate>Sat, 30 Nov 2019 14:00:00 +0000</pubDate><guid>https://jjbeto.com/pt/blog/2019/11/30/setup_completo_para_este_site_parte_1/</guid><description>
&lt;p&gt;&lt;aside&gt;
&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;header&gt;
&lt;h2&gt;√çndice&lt;/h2&gt;
&lt;/header&gt;
- &lt;a href=&#34;#visao-geral&#34;&gt;1. Vis√£o Geral&lt;/a&gt;
- &lt;a href=&#34;#objetivo&#34;&gt;2. Objetivo&lt;/a&gt;
- &lt;a href=&#34;#setup&#34;&gt;3. Setup&lt;/a&gt;
- &lt;a href=&#34;#aonde-estou&#34;&gt;4. Ok, ent√£o.. Aonde estou?&lt;/a&gt;
- &lt;a href=&#34;#curriculo&#34;&gt;5. Primeira P√°gina: Curr√≠culo&lt;/a&gt;
- &lt;a href=&#34;#homepage-revisao&#34;&gt;6. Home Page: Revis√£o&lt;/a&gt;
- &lt;a href=&#34;#postando&#34;&gt;7. Postando&lt;/a&gt;
- &lt;a href=&#34;#publicando&#34;&gt;8. Publicando&lt;/a&gt;
- &lt;a href=&#34;#conclusao&#34;&gt;9. Conclus√£o&lt;/a&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;!--endtoc--&gt;&lt;/p&gt;
&lt;h2 id=&#34;visao-geral&#34;&gt;1. Vis√£o Geral&lt;/h2&gt;
&lt;p&gt;Eu finalmente decidi fazer um site no estilo Blog üèÜ. E n√£o, o &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; que vamos falar neste post n√£o √© o &lt;a href=&#34;https://en.wikipedia.org/wiki/Hugo_(franchise)&#34; target=&#34;_blank&#34;&gt;Hugo Game&lt;/a&gt; üòÇ&lt;/p&gt;
&lt;p&gt;Enfim&amp;hellip; Eu gosto muito de tecnologia, viagens, cervejas e algumas outras coisa, por isso acho que posso compartilhar um pouco do que sei (ou acho que sei) com qualquer um que esteja disposto a ler sobre isso aqui ü§ì&lt;/p&gt;
&lt;p&gt;Como meu primeiro post, &lt;strong&gt;quero compartilhar minha experi√™ncia com &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;&lt;/strong&gt;, voc√™s poder√£o encontrar todo o c√≥digo fonte no meu reposit√≥rio do &lt;a href=&#34;https://github.com/jjbeto/jjbeto.github.io/tree/source&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt; (preste aten√ß√£o na branch üòâ).&lt;/p&gt;
&lt;h2 id=&#34;objetivo&#34;&gt;2. Objetivo&lt;/h2&gt;
&lt;p&gt;Pra mim fazer um blog n√£o deveria ser algo t√£o complexo de se criar, e na verdade n√£o √©. Para servi√ßos de blogs complexos com v√°rias funcionalidades especiais e que ainda precisam lidar com a carga de prover infraestrutura pra diversos clientes ao mesmo tempo, √© obviamente mais complexo de se manter como um projeto.&lt;/p&gt;
&lt;p&gt;Mas esse n√£o √© o meu caso.&lt;/p&gt;
&lt;p&gt;O que eu preciso e de um lugar pra por minhas anota√ß≈çes, compartilhar algum conte√∫do que possa ser interessante pra outras pessoas e quem sabe iniciar conversas interessantes sobre tecnologia (principalmente, mas n√£o exclusivamente).&lt;/p&gt;
&lt;p&gt;Ent√£o fiz uma pesquisa e finalmente decidi usar o &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;. Voc√™s encontrar√£o v√°rios posts comparando diversos geradores de sites est√°ticos (pra blogs ou sites de uso geral como o Hugo), mas eu n√£o vou entrar nesse m√©rito aqui. Se voc√™ quer pesquisar mais profundamente sobre esse item, voc√™ pode come√ßar por estas compara√ß≈çes interessantes &lt;a href=&#34;https://www.techiediaries.com/jekyll-hugo-hexo/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; e &lt;a href=&#34;https://stackshare.io/stackups/hexo-vs-hugo-vs-jekyll&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; so pra come√ßar (links em ingl√™s).&lt;/p&gt;
&lt;p&gt;Ent√£o vamos bloggar ü§ì&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;3. Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Para instalar o Hugo siga as intru√ß≈çes &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; target=&#34;_blank&#34;&gt;descritas aqui&lt;/a&gt; na documenta√ß√£o oficial;
&lt;ul&gt;
&lt;li&gt;Escolhi instalar com &lt;code&gt;brew&lt;/code&gt; pois uso Mac e √© muito f√°cil;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Para criar meu projeto inicial eu segui os passos &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/&#34; target=&#34;_blank&#34;&gt;descritos aqui&lt;/a&gt; na documenta√ß√£o oficial do tema Academics;
&lt;ul&gt;
&lt;li&gt;Decidi usar o op√ß√£o &amp;lsquo;Install with Git&amp;rsquo; (instalar usando Git) apenas para manter os cr√©ditos para o reposit√≥rio oficial atrav√©s do link no github &lt;code&gt;forked from&lt;/code&gt; üòÑ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depois de fazer a instala√ß√£o b√°sica de acordo com a documenta√ß√£o, usei linha de comando bash para ir at√© o diret√≥rio do projeto e executei o seguinte comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;a data-fancybox=&#34;&#34; href=&#34;1-hugo_serve.png&#34; data-caption=&#34;Executando hugo server na linha de comando&#34;&gt;
&lt;img src=&#34;1-hugo_serve.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;
&lt;figcaption&gt;
Executando &lt;code&gt;hugo server&lt;/code&gt; na linha de comando
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Ent√£o ao acessar o link &lt;a href=&#34;http://localhost:1313/&#34; target=&#34;_blank&#34;&gt;localhost&lt;/a&gt; √© poss√≠vel ver um site assim:&lt;/p&gt;
&lt;figure&gt;
&lt;a data-fancybox=&#34;&#34; href=&#34;2-first-home-view.png&#34; data-caption=&#34;P√°gima Inicial&#34;&gt;
&lt;img src=&#34;2-first-home-view.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;
&lt;figcaption&gt;
P√°gima Inicial
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Muito bom, agora temos um template completo executando localmente üò¨&lt;/p&gt;
&lt;h2 id=&#34;aonde-estou&#34;&gt;4. Ok, ent√£o.. Aonde estou?&lt;/h2&gt;
&lt;p&gt;Sim! Est√° vivo! Mas, ent√£o.. E agora? Tem um monte de arquivos pra todo lado e v√°rias p√°ginas que na realidade eu nem preciso. Encontrei um artigo interessante falando exatamente sobre isso &lt;a href=&#34;https://andreaczhang.rbind.io/post/my-1st-blogpost/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; (ingl√™s) e √© um fato, agente se sente um pouco perdido.&lt;/p&gt;
&lt;p&gt;Mas ok, primeiro as coisas primeiras: vamos limpar o c√≥digo e definir o &lt;a href=&#34;https://en.wikipedia.org/wiki/Minimum_viable_product&#34; target=&#34;_blank&#34;&gt;MVP&lt;/a&gt;, certo?&lt;/p&gt;
&lt;h3 id=&#34;4-1-config-toml-params-toml&#34;&gt;4.1. config.toml &amp;amp; params.toml&lt;/h3&gt;
&lt;p&gt;N√£o h√° muito o que fazer aqui, apenas a url, informa√ß≈çes basicas e dados de contato (tamb√©m alguma configura√ß√£o do tema que achar necess√°rio).
A documenta√ß√£o nos pr√≥prios arquivos s√£o muito boas e auto explicativas, mas voc√™ pode conhecer algumas funcionalidades extras na &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o do Academic&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;4-2-p√°ginas-m√≠nimas-e-organiza√ß√£o-de-conte√∫do&#34;&gt;4.2. P√°ginas M√≠nimas e Organiza√ß√£o de Conte√∫do&lt;/h3&gt;
&lt;p&gt;De acordo com a documenta√ß√£o do &lt;a href=&#34;https://gohugo.io/content-management/organization/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;, a organiza√ß√£o b√°sica √© baseada em diret√≥rios e arquivos, como √© poss√≠vel ver nesse exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
‚îî‚îÄ‚îÄ content
‚îî‚îÄ‚îÄ about
| ‚îî‚îÄ‚îÄ index.md // &amp;lt;- https://example.com/about/
‚îú‚îÄ‚îÄ posts
| ‚îú‚îÄ‚îÄ firstpost.md // &amp;lt;- https://example.com/posts/firstpost/
| ‚îú‚îÄ‚îÄ happy
| | ‚îî‚îÄ‚îÄ ness.md // &amp;lt;- https://example.com/posts/happy/ness/
| ‚îî‚îÄ‚îÄ secondpost.md // &amp;lt;- https://example.com/posts/secondpost/
‚îî‚îÄ‚îÄ quote
‚îú‚îÄ‚îÄ first.md // &amp;lt;- https://example.com/quote/first/
‚îî‚îÄ‚îÄ second.md // &amp;lt;- https://example.com/quote/second/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ent√£o decidi tentar trazer algum consenso pra esse &lt;code&gt;caos&lt;/code&gt; usando um padr√£o simples: no diret√≥rio &lt;code&gt;posts&lt;/code&gt; vou organizar as postagens usando uma estrutura de data &lt;code&gt;ano/m√™s/dia&lt;/code&gt; e por todos os arquivos relativos ao post no mesmo diret√≥rio, se eu precisar criar multiplas postagens no mesmo dia eu tamb√©m posso controlar com um diret√≥rio pra reservar o nome do post: &lt;code&gt;.content/posts/2019/11/30/meu-post-bacana/index.md&lt;/code&gt;. Tamb√©m vou renomear o diret√≥rio &lt;code&gt;posts&lt;/code&gt; para &lt;code&gt;blog&lt;/code&gt; (√© mais relevante no meu entendimento, tamb√©m considerando a url). Ent√£o o conte√∫do do blog ser√° organizado assim:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
‚îî‚îÄ‚îÄ content
‚îî‚îÄ‚îÄ blog
‚îî‚îÄ‚îÄ 2019
‚îî‚îÄ‚îÄ 11
| ‚îî‚îÄ‚îÄ 30
| ‚îî‚îÄ‚îÄ developing_this_blog_with_hugo.md // &amp;lt;- https://jjbeto.com/blog/2019/11/30/developing_this_blog_with_hugo/
‚îî-- 12
‚îî-- 01
‚îî‚îÄ‚îÄ following_awesome_post.md // &amp;lt;- https://jjbeto.com/blog/2019/12/05/following_awesome_post/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dessa forma √© poss√≠vel agregar todos os conte√∫dos relacionados em um mesmo lugar, tamb√©m chegar rapidamente at√© uma postagem pela data e de repente posso at√© criar um plugin pra fazer algo mais personalizado no futuro (quem sabe?).&lt;/p&gt;
&lt;p&gt;Fora a organiza√ß√£o do post, tamb√©m preciso decidir sobre o conte√∫do em geral do site, ent√£o inicialmente vou preparar o seguinte:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;P√°gina&lt;/th&gt;
&lt;th&gt;Motiva√ß√£o&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sobre (p√°gina padr√£o de autores do Hugo)&lt;/td&gt;
&lt;td&gt;Curr√≠culo m√≠nimo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Curr√≠culo&lt;/td&gt;
&lt;td&gt;√â bom ter um online e tamb√©m j√° testar algumas funcionalidades üòÑ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Contato&lt;/td&gt;
&lt;td&gt;Er, disponibilizar algumas formas de contato via redes sociais&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P√°gina b√°sica do &lt;code&gt;/blog&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;P√°gina para agregar a lista de postagens&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Depois √© s√≥ adicionar outras p√°ginas com mais funcionalidades, como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cursos: para p√°ginas com conte√∫do no estilo tutorial como esse aqui ü§î&lt;/li&gt;
&lt;li&gt;Palestras: para meetups e/ou palestras que eu ache interessante de acompanhar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O plano b√°sico est√° todo definido. Vamos come√ßar a trabalhar nele üòÑ&lt;/p&gt;
&lt;h2 id=&#34;curriculo&#34;&gt;5. Primeira P√°gina: Curr√≠culo&lt;/h2&gt;
&lt;p&gt;A p√°gina padr√£o do tema Academic tem componentes demais (claro, eles querem exibir o m√°ximo poss√≠vel de funcionalidades, certo?), e como esse tema √© mais voltado √† academia/ensino em geral, tem v√°rias ferramentas e p√°ginas muito boas para ajudar a &lt;strong&gt;mostrar minhas habilidades&lt;/strong&gt;, mas eu quero uma p√°gina inicial mais limpa, com apenas as √∫ltimas postagens e uma apresenta√ß√£o simplificada de quem sou eu.&lt;/p&gt;
&lt;p&gt;Ent√£o vou criar o diret√≥rio &lt;code&gt;resume&lt;/code&gt; (em portugu√™s ser√° traduzido pra &lt;code&gt;curriculo&lt;/code&gt; usando uma feature do Hugo chamada &lt;code&gt;slug&lt;/code&gt;, mas falarei disso em outra postagem - eu acho) e testar como usar as funcionalidades do Hugo l√°, transferindo tudo relacionado ao tema da &lt;code&gt;home&lt;/code&gt; para &lt;code&gt;resume&lt;/code&gt;. Isso pode limpar a p√°gina inicial mas mantendo v√°rias coisas legais. Voc√™ pode fazer um fork da √∫ltima vers√£o do meu curr√≠culo &lt;a href=&#34;https://github.com/jjbeto/jjbeto.github.io/tree/source/content/resume&#34; target=&#34;_blank&#34;&gt;no meu GitHub&lt;/a&gt; e atualizar com seus pr√≥prios dados e adicionar o diret√≥rio no seu pr√≥prio site (se utilizar Hugo).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Criar o diret√≥rio &lt;code&gt;./content/resume&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Criar arquivo &lt;code&gt;./content/resume/index.md&lt;/code&gt; que define o widget: no meu caso caso √© apenas uma p√°gina vazia onde adicionarei sess√µes exatamente como na p√°gina inicial&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Curr√≠culo&amp;quot;
date: &amp;quot;2019-11-30T12:00:00Z&amp;quot;
type: &amp;quot;widget_page&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copiar &lt;code&gt;./content/home/about.md&lt;/code&gt; para &lt;code&gt;.content/resume/&lt;/code&gt; para funcionar da mesma forma que a p√°gina inicial&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mover &lt;code&gt;./content/home/accomplishments.md&lt;/code&gt;, &lt;code&gt;./content/home/skills.md&lt;/code&gt; e &lt;code&gt;./content/home/experience.md&lt;/code&gt; para &lt;code&gt;.content/resume/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duplicar &lt;code&gt;./content/resume/accomplishments.md&lt;/code&gt; para &lt;code&gt;./content/resume/certifications.md&lt;/code&gt; para reusar esta funcionalidade, separando certifica√ß√µes de cursos&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Preencher todos os dados! Mudar tamb√©m os dados em &lt;code&gt;./content/authors/admin/_index.md&lt;/code&gt; (que eu renomeei para &lt;code&gt;./content/authors/jjbeto/_index.md&lt;/code&gt;) e atualizar as outras p√°ginas em &lt;code&gt;.content/resume/&lt;/code&gt; com dados customizados j√° √© o suficiente para ter um resultado muito bom&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
&lt;a data-fancybox=&#34;&#34; href=&#34;3-resume-view.png&#34; data-caption=&#34;Curr√≠culo inicial&#34;&gt;
&lt;img src=&#34;3-resume-view.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;
&lt;figcaption&gt;
Curr√≠culo inicial
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Tamb√©m usei um pequeno truque de CSS descrito &lt;a href=&#34;https://varya.me/en/posts/pseudo-tag-cloud-css/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;, assim pude criar uma n√∫vem de tags pra listar as tecnologias que tenho experi√™ncia:&lt;/p&gt;
&lt;figure&gt;
&lt;a data-fancybox=&#34;&#34; href=&#34;4-cloud-tags.png&#34; data-caption=&#34;N√∫vem de tags&#34;&gt;
&lt;img src=&#34;4-cloud-tags.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;
&lt;figcaption&gt;
N√∫vem de tags
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Como fazer isso? Voc√™ pode verificar no &lt;a href=&#34;https://github.com/jjbeto/jjbeto.github.io/tree/source/content/resume/experience.md&#34; target=&#34;_blank&#34;&gt;c√≥digo fonte&lt;/a&gt;, mas pra ser mais f√°cil vou listar aqui. S√£o necess√°rios apenas 2 itens:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- O HTML para a nuvem --&amp;gt;
&amp;lt;div class=&amp;quot;cloud_wrapper&amp;quot;&amp;gt;
&amp;lt;ul class=&amp;quot;cloud&amp;quot;&amp;gt;
&amp;lt;li&amp;gt;Item 01&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Item 02&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
...
&amp;lt;!-- O CSS para a nuvem --&amp;gt;
&amp;lt;style&amp;gt;
.cloud_wrapper { text-align: center; }
.cloud { display: inline; list-style-type: none; width: 80%; margin: auto; }
.cloud li { list-style: none; display: inline; margin: 2px; }
.cloud li:nth-of-type(3n+1) { font-size: 1.25em; }
.cloud li:nth-of-type(4n+3) { font-size: 1.5em; }
.cloud li:nth-of-type(5n-3) { font-size: 1em; }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outra coisa que adicionei foi os √≠cones do &lt;a href=&#34;http://konpa.github.io/devicon/&#34; target=&#34;_blank&#34;&gt;devicons&lt;/a&gt; para poder mostrar imagens da stack que estou utilizando!&lt;/p&gt;
&lt;p&gt;Para fazer isso apenas adicionei em &lt;code&gt;./content/resume/skills.md&lt;/code&gt; a refer√™ncia do estilo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://cdn.rawgit.com/konpa/devicon/df6431e323547add1b4cf45992913f15286456d3/devicon.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Assim posso utilizar √≠cones dessa forma:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[[feature]]
icon = &amp;quot;apache-plain&amp;quot;
icon_pack = &amp;quot;devicon&amp;quot;
name = &amp;quot;Apache&amp;quot;
description = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Com certeza existe uma forma melhor de adicionar √≠cones no Hugo de forma global, assim eu poderia usar esses √≠cones em qualquer lugar do site, mas n√£o fiz isso por enquanto apenas porque quero usar esses √≠cones exclusivamente em &lt;code&gt;./content/resume/skills.md&lt;/code&gt;, logo n√£o preciso obrigar baixar o CSS em qualquer p√°gina lida.&lt;/p&gt;
&lt;p&gt;Sensacional, n√©?! Agora podemos brincar com o resto do conte√∫do e mudar outros pontos que sejam interessantes e/ou √∫teis.&lt;/p&gt;
&lt;h2 id=&#34;homepage-revisao&#34;&gt;6. Home Page: Revis√£o&lt;/h2&gt;
&lt;p&gt;Agora que a p√°gina do &lt;a href=&#34;https://jjbeto.com/resume/&#34;&gt;curr√≠culo&lt;/a&gt; est√° pronta, podemos terminar a p√°gina inicial:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activate &lt;code&gt;./content/home/hero.md&lt;/code&gt; para usar como &amp;ldquo;bem vindo&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;Desabilitar as seguintes p√°ginas (sem remover pois eu posso precisar dessas p√°ginas em breve):
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./content/home/featured.md&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./content/home/projects.md&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./content/home/publications.md&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./content/home/tags.md&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./content/home/talks.md&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eu renomeei o diret√≥rio &lt;code&gt;./content/post&lt;/code&gt; para &lt;code&gt;./content/blog&lt;/code&gt; anteriormente, logo o widget &lt;code&gt;./content/home/posts.md&lt;/code&gt; parou de funcionar! N√£o, na verdade o tipo de itens listados por padr√£o √© &lt;code&gt;post&lt;/code&gt;, ent√£o eu apenas mudei para &lt;code&gt;blog&lt;/code&gt; (nome do diret√≥rio) e tudo voltou a funcionar.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[content]
# Page type to display. E.g. post, talk, or publication.
page_type = &amp;quot;blog&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outra pequena mudan√ßa que eu quiz fazer foi o favicon (aquele √≠cone que fica no topo do navegador). Para mudar isso primeiro precisei encontrar onde ele estava sendo usado: &lt;code&gt;./themes/academic/layout/partials/site_head.html&lt;/code&gt; na linha &lt;code&gt;125&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/png&amp;quot; href=&amp;quot;{{ &amp;quot;img/icon-32.png&amp;quot; | relURL }}&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O tema Academics tem o seu pr√≥prio icone guardado em &lt;code&gt;./themes/academic/static/img/icon-32.png&lt;/code&gt;, ent√£o tudo que eu precisei fazer foi sobreescrever isso com o meu pr√≥prio √≠cone em &lt;code&gt;.static/img&lt;/code&gt;, adicionando uma imagem PNG com o mesmo nome ü•á&lt;/p&gt;
&lt;p&gt;Mas qual √≠cone usar? ü§î&lt;/p&gt;
&lt;p&gt;Decidi n√£o investir muito tempo nisso por agora, ent√£o fui nesse &lt;a href=&#34;http://fa2png.io/icons/&#34; target=&#34;_blank&#34;&gt;site muito legal&lt;/a&gt; e gerei um √≠cone baseado no &lt;a href=&#34;https://konpa.github.io/devicon/&#34; target=&#34;_blank&#34;&gt;Devicons&lt;/a&gt;! Apenas guardei o PNG em &lt;code&gt;.static/img/icon-32.png&lt;/code&gt; e est√° pronto!&lt;/p&gt;
&lt;p&gt;Ok, p√°gina inicial completamente limpa e tamb√©m uma p√°gina de curr√≠culo pronta!&lt;/p&gt;
&lt;h2 id=&#34;postando&#34;&gt;7. Postando&lt;/h2&gt;
&lt;p&gt;Para criar um post precisamos apenas escrever um monte de coisas legais, ne?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A resposta √©: na verdade n√£o.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eu sou meio met√≥dico, n√£ gosto de ler blogs ou sites que parecem estar sobre carregados de conte√∫do misturado e com informa√ß√£o demais em um s√≥ lugar.&lt;/p&gt;
&lt;p&gt;Por conta disso resolvi pesquisar mais sobre &lt;code&gt;como organizar meus posts de um jeito que outras pessoas possam entender&lt;/code&gt; e&amp;hellip; N√£o tive muita sorte üòÖ&lt;/p&gt;
&lt;p&gt;Ent√£o como uma primeira tentativa, decidi postar como mini-publica√ß√µes, como um dos meus blogs favoritos relacionados a Java faz (&lt;a href=&#34;https://www.baeldung.com/&#34; target=&#34;_blank&#34;&gt;Baeldung&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Criar uma estrutura b√°sica para um post:
&lt;ul&gt;
&lt;li&gt;Vis√£o Geral&lt;/li&gt;
&lt;li&gt;Items&lt;/li&gt;
&lt;li&gt;Conclus√£o&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Usar todas as ferramentas poss√≠veis para mostrar exemplos&lt;/li&gt;
&lt;li&gt;Disponibilizar um c√≥digo funcional em um &lt;a href=&#34;https://github.com/jjbeto/jjbeto.github.io/tree/source/&#34; target=&#34;_blank&#34;&gt;reposit√≥rio&lt;/a&gt; ao final para mostrar um &lt;a href=&#34;https://jjbeto.com/&#34; target=&#34;_blank&#34;&gt;demo operacional&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Como ferramenta extra, vou criar um &lt;code&gt;√çndice&lt;/code&gt; como primeiro item em cada postagem para facilitar a navega√ßao.&lt;/p&gt;
&lt;p&gt;√â poss√≠vel verificar no &lt;a href=&#34;https://github.com/jjbeto/jjbeto.github.io/tree/source/content/blog/2019/11/30/developing_this_blog_with_hugo_part_1/index.md&#34; target=&#34;_blank&#34;&gt;c√≥digo fonte desta p√°gina&lt;/a&gt;, mas vou listar os pontos que me tomaram algum tempinho extra de como fazer:&lt;/p&gt;
&lt;h3 id=&#34;7-1-anchors-e-√≠ndine&#34;&gt;7.1. Anchors e √çndine&lt;/h3&gt;
&lt;p&gt;N√£o encontrei uma forma f√°cil/pronta pra criar esse &lt;code&gt;√çndice&lt;/code&gt; no tema do Academics, mas encontrei nesse &lt;a href=&#34;https://discourse.gohugo.io/t/creating-anchors-in-hugo-pages-solved/9552&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt; um &lt;a href=&#34;https://raw.githubusercontent.com/kaushalmodi/ox-hugo/master/test/site/content/posts/link-to-headings-by-name.md&#34; target=&#34;_blank&#34;&gt;link bem interessante&lt;/a&gt; (em ingl√™s) que me ajudaram a desenvolver uma vers√£o inicial.&lt;/p&gt;
&lt;p&gt;Agora o post come√ßa assim:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;aside&amp;gt;
&amp;lt;div class=&amp;quot;ox-hugo-toc toc&amp;quot;&amp;gt;
&amp;lt;header&amp;gt;
&amp;lt;h2&amp;gt;√çndice&amp;lt;/h2&amp;gt;
&amp;lt;/header&amp;gt;
- [1. Vis√£o Geral](#visao-geral)
- [2. Item](#item)
- [3. Conclus√£o](#conclusao)
&amp;lt;/div&amp;gt;
&amp;lt;/aside&amp;gt;
&amp;lt;!--endtoc--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dessa forma √© muito simples de acompanhar a postagem em si e o c√≥digo tamb√©m. Se algum leitor souber de uma forma melhor (ou mais bonita) de fazer isso, &lt;strong&gt;por favor entre em contato!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Se voc√™ n√£o sabe o que √© um &lt;code&gt;HTML Anchor&lt;/code&gt;, voc√™ deveria &lt;a href=&#34;https://lmgtfy.com/?q=html+anchor&#34; target=&#34;_blank&#34;&gt;pesquisar mais&lt;/a&gt; sobre o tema üòÑ&lt;/p&gt;
&lt;h3 id=&#34;7-2-lidando-com-imagens&#34;&gt;7.2. Lidando com Imagens&lt;/h3&gt;
&lt;p&gt;Como um framework guiado por diret√≥rios e arquivos, vou guardar todas as imagens e arquivos necess√°rios para cada post no mesmo diret√≥rio. E poss√≠vel verificar no &lt;a href=&#34;https://github.com/jjbeto/jjbeto.github.io/tree/source/content/blog/2019/11/30/developing_this_blog_with_hugo_part_1/&#34; target=&#34;_blank&#34;&gt;c√≥digo fonte&lt;/a&gt; dessa postagem, e no final foi incrivelmente f√°cil de mostrar uma imagem:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;![This is an image](featured.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O √∫nico problema √© que dessa forma a imagem e adicionada diretamente no corpo da p√°gina de forma est√°tica, e dependendo da imagem se torna dificil ler algum conte√∫do ou ver detalhes de forma correta. Ent√£ encontrei uma forma mais interessante &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/6d92b0e8ab5512a4489173a560b27adf91c0b260/exampleSite&#34; target=&#34;_blank&#34;&gt;no diret√≥rio de exemplos&lt;/a&gt; com formas mais elegantes de exibir imagens usando c√≥digo Go, para mais detalhes veja a &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#example-figure-input&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ah e tamb√©m √© poss√≠vel referenciar imagens via URL üòÑ&lt;/p&gt;
&lt;h2 id=&#34;publicando&#34;&gt;8. Publicando&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;p&gt;&lt;strong&gt;TL;TR&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Execute o seguinte comando para gerar a vers√£o final do seu site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo --gc --minify
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dessa forma um diret√≥rio &lt;code&gt;public&lt;/code&gt; ser√° gerado com todo o site est√°tico pronto pra ser publicado, a √∫ltima coisa que falta para completar √© commitar o diret√≥rio &lt;code&gt;public&lt;/code&gt; em um reposit√≥rio do GitHub com o padr√£o &lt;code&gt;&amp;lt;seu usu√°rio github&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Isso √© tudo, voc√™ pode acessar seu site hospedado pelo GitHub Pages em &lt;code&gt;&amp;lt;seu usu√°rio github&amp;gt;.github.io&lt;/code&gt; e ser feliz ‚≠êÔ∏è&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Existe muito conte√∫do explicando como fazer o setup de sites usando Hugo no GitHub Pages, por exemplo na pr√≥pria &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o do Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mas para ser honesto, acho que isso deve ser feito automaticamente por algum servi√ßo/ferramenta de &lt;a href=&#34;https://medium.com/@nirespire/what-is-cicd-concepts-in-continuous-integration-and-deployment-4fe3f6625007&#34; target=&#34;_blank&#34;&gt;CI/CD&lt;/a&gt;. Por ser um pouco mais complexo, vou deixar isso pra um &lt;strong&gt;pr√≥ximo post&lt;/strong&gt;!&lt;/p&gt;
&lt;h2 id=&#34;conclusao&#34;&gt;9. Conclus√£o&lt;/h2&gt;
&lt;p&gt;Esse foi um loooooongo primeiro post, wow! No pr√≥ximo vou tentar fazer um pouco mais curto (quem sabe).&lt;/p&gt;
&lt;p&gt;Hugo √© muito √∫til, tem uma comunidade gigante, √≥timos temas e plugins e uma extensa documenta√ß√£o. E obiviamente uma excelente ferramenta pra se usar, muito intuitivo e facil de se acostumar pra usar.&lt;/p&gt;
&lt;p&gt;Estou ansioso para usar novas funcionalidades, e &lt;strong&gt;esse post em Portugu√™s j√° est√° marcando uma evolu√ß√£o do site&lt;/strong&gt;, pois estou estendendo para gerar conte√∫do agora em Portugu√™s tambem (o site foi pensado inicialmente pra ser somente em ingl√™s),
mas tamb√©m quero explorar outras funcionalidades como Google Analytics e Coment√°rios com redes sociais! Fique ligado para novidades, onde falarei sobre performance tunning no Hugo, CI/CD (com &lt;strong&gt;GitHub Actions&lt;/strong&gt;) e mais.&lt;/p&gt;</description></item></channel></rss>